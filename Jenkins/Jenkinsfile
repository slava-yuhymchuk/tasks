pipeline {
    agent any
    environment {
        // CODE_CNANGE = getGitChanges()
        REGISTRY_FE = "slavayuhymchuk/tasks_fe"
        REGISTRY_BE = "slavayuhymchuk/tasks_be"
        REGISTRY_CRED = "dockerhub_accesstoken"
        VERSION_FE = "1.1" // to get from code
        VERSION_BE = "1.0" // to get from code
    }
    stages {
        stage ("Build FE") {
            // when {
            //     expression {
            //         CODE_CNANGE == true
            //     }
            // }
            steps {
                echo "Building FE docker image version ${VERSION_FE}"
                dir ("Python & Docker/FE") {
                    script {
                        IMAGE_FE = docker.build REGISTRY_FE + ":${VERSION_FE}"
                        IMAGE_FE_LATEST = docker.build REGISTRY_FE + ":latest"
                    }
                    // sh "docker build -t slavayuhymchuk/tasks_fe:${VERSION} ."
                    // sh "docker build -t slavayuhymchuk/tasks_fe:latest ."
                    // script {
                    //     IMAGE_ID = sh script: "docker images --filter=reference=slavayuhymchuk/tasks_fe:${VERSION} --format '{{.ID}}'", returnStdout: true
                    // }
                    // sh "docker tag ${IMAGE_ID} slavayuhymchuk/tasks_fe:latest"
                    // ..
                }
            }
        }
        stage ("Build BE") {
            // when {
            //     expression {
            //         CODE_CNANGE == true
            //     }
            // }
            steps {
                echo "Building BE docker image version ${VERSION_BE}"
                dir ("Python & Docker/FE") {
                    script {
                        IMAGE_BE = docker.build REGISTRY_BE + ":${VERSION_BE}"
                        IMAGE_BE_LATEST = docker.build REGISTRY_BE + ":latest"
                    }
                }
            }
        }
        stage ("Test") {
            steps {
                echo "Testing version ${VERSION}"
            }
        }
        stage ("Push to Docker Hub") {
            steps {
                withCredentials([usernamePassword(credentialsId: "dockerhub-accesstoken", usernameVariable: USER, passwordVariable: PWD)]) {
                    echo "Pushing version ${VERSION} to Docker Hub"
                    // script {
                    //     docker.withRegistry( '', dockerhub-accesstoken ) {
                    //     dockerImage.push()
                    //     }
                    // } 
                    // sh "docker login"
                    // sh "docker push slavayuhymchuk/tasks_fe:${VERSION}"
                    // sh "docker push slavayuhymchuk/tasks_fe:latest"
                }
            }
        }
        stage ("Deploy to DEV") {
            when {
                expression {
                    BRANCH_NAME == "dev"
                }
            }
            steps {
                echo "Deploying version ${VERSION} to DEV EKS cluster..."
            }
        }
        stage ("Deploy to PROD") {
            when {
                expression {
                    BRANCH_NAME == "main"
                }
            }
            steps {
                echo "Deploying ${VERSION} to PROD EKS cluster..."
            }
        }
    }
    post {
        always {
            echo "Finished pileline"
        }
        success {
            echo "Success"
        }
        failure {
            echo "Failure"
        }
    }
}
